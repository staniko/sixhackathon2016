personal.newAccount()
personal.unlockAccount(eth.accounts[0], "node01")
admin.addPeer("enode://f6463b74b3bd975a0f3ab6c7cd71ba25d7135920b4582cecbdaa3fce399687c5fc622c35a17507aac091beea253eb8b93d1b4fcf5691f689f7b106c248bce60e@[::]:30302")
var greeterSource = 'contract mortal { address owner; function mortal() { owner = msg.sender; } function kill() { if (msg.sender == owner) suicide(owner); } } contract greeter is mortal { string greeting; uint32 timestamp; function greeter(string _greeting, uint32 _timestamp) public { greeting = _greeting; timestamp = _timestamp; } function greet() constant returns (uint32) { return timestamp; } }'
var greeterCompiled = web3.eth.compile.solidity(greeterSource)
var _greeting = "Hello World!"
var greeterContract = web3.eth.contract(greeterCompiled.greeter.info.abiDefinition);
var timestamp = Date.now();
var greeter = greeterContract.new(_greeting, timestamp,{from:web3.eth.accounts[0], data: greeterCompiled.greeter.code, gas: 300000}, function(e, contract){
    if(!e) {
      if(!contract.address) {
        console.log("Contract transaction send: TransactionHash: " + contract.transactionHash + " waiting to be mined...");
      } else {
        console.log("Contract mined! Address: " + contract.address);
        console.log(contract);
      }
    }
})
greeter
eth.accounts
